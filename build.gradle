/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/getting_started.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    // download tasks
    //id "de.undercouch.download" version "4.0.1"
    id "de.undercouch.download" version "5.2.0"

    // Java Code Coverage
    id "jacoco"

    id "me.champeau.gradle.jmh" version "0.5.2"

}

jacoco{
    reportsDir = file("build/jacocoReports")
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

}

application {
    // Define the main class for the application
	  mainClass.set("searchengine.WebServer")
}


task buildConf() {
    doLast {
        File configFile = file('config.txt')
        if(!configFile.exists() ) {
            configFile.text = """data/enwiki-medium.txt"""
        }
    }
}

task jmhtask(dependsOn: [buildConf, jmhJar], type: JavaExec) {
    group 'jmh'
    classpath = files('build/libs/searchengine-jmh.jar')
    mainClassName = org.openjdk.jmh.Main
}

task jmhQuick(dependsOn: [buildConf, jmhJar], type: JavaExec) {
    group 'jmh'
    classpath = files('build/libs/searchengine-jmh.jar')
    mainClassName = org.openjdk.jmh.Main
    args = ["-wi", "0", "-i", "1", "-f", "1"]
}

run {
    dependsOn buildConf
    mainClassName = 'searchengine.WebServer'
}
tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
